// <auto-generated />
using System;
using Common.Db.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Common.Migrations
{
    [DbContext(typeof(SurfWebDbContext))]
    [Migration("20250804014951_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Model.Models.Log.DbLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IsDelete")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("DbLog", (string)null);
                });

            modelBuilder.Entity("Model.Models.Log.ServicesLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IsDelete")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ServicesLog", (string)null);
                });

            modelBuilder.Entity("Model.Models.Main.MapModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BonusNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IsDelete")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StageNumber")
                        .HasColumnType("int");

                    b.Property<int>("SurcessNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Map", (string)null);
                });

            modelBuilder.Entity("Model.Models.Main.PlayerCompleteModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Auth")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Hide")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IsDelete")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<string>("MapName")
                        .HasColumnType("longtext");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlayerName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Stage")
                        .HasColumnType("int");

                    b.Property<float>("Time")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PlayerComplete", (string)null);
                });

            modelBuilder.Entity("Model.Models.Main.PlayerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Auth")
                        .HasColumnType("int");

                    b.Property<int>("BWRNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Integral")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("IsDelete")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SWRNumber")
                        .HasColumnType("int");

                    b.Property<int>("SucceesNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WRNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Player", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
